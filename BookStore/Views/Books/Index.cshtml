@model IEnumerable<BookStore.Models.Book>

@{
    ViewData["Title"] = "Books List";
    var searchTerm = ViewData["SearchTerm"] as string;
    var selectedType = ViewData["SelectedType"] as string;
    var types = ViewBag.Types as List<string>; // Türleri liste olarak al
}

<h2>Books List</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>

<!-- Arama Formu -->
<form asp-action="Index" method="get" class="form-inline mb-3">
    <div class="form-group">
        <input type="text" name="searchTerm" class="form-control" placeholder="Search by title or author" value="@searchTerm" />
    </div>
    <div class="form-group ml-2">
        <select id="typeSelect" name="selectedType" class="form-control">
            <option value="">All Types</option>
            <!-- Seçenekler buraya JavaScript ile eklenecek -->
        </select>
    </div>
    <button type="submit" class="btn btn-primary ml-2">Search</button>
</form>

<!-- JavaScript ile dinamik seçenek ekleme -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Türleri ViewData'dan al
        var types = @Html.Raw(Json.Serialize(ViewBag.Types));
        var selectedType = '@selectedType';
        
        var select = document.getElementById('typeSelect');

        // Türleri select elementine ekle
        types.forEach(function (type) {
            var option = document.createElement('option');
            option.value = type;
            option.textContent = type;
            if (type === selectedType) {
                option.selected = true;
            }
            select.appendChild(option);
        });
    });
</script>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Author)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type) <!-- Yeni başlık -->
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Stock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Seller)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Author)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type) <!-- Yeni sütun -->
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Stock)
                </td>
                <td>
                    @item.Seller?.SellerName  <!-- Null referansına dikkat edin -->
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
